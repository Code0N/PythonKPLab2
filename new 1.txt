2
помешало бы вам использовать другие координаты, но вы должны быть в курсе
всех тонкостей отношений между этими системами и размерами типа.
Шрифты идентифицируются не только по названиям, но и по
вертикальным размерам (кеглям), измеряемым в пунктах. В традиционной
типографике 1 пункт (пт) равен 0,01384 дюйма. Это около 1/72 дюйма, поэтому
в компьютерной типографике принято считать, что 1 пт в точности равен 1/72
дюйма.
Рендеринг шрифтов – очень сложная тема, и невозможно рассмотреть его
в деталях в этом пособии, но в общем случае, фонт-файл – это совокупное
описание коллекции глифов (глиф – конкретное графическое представление
графемы), которые описывают графемы (графема – единица представления
письменной речи) в шрифте. Некоторые символы используют более одного
глифа, и даже возможно, что глиф, используемый для каждого символа, может
меняться в зависимости от символа, который предшествует ему. Когда вы
создаёте шрифт, указывая Font Family and Size, система создаёт описания всех
глифов шрифта, адаптированных под размер и разрешение устройства вывода.
Именно поэтому true-type шрифт может сохранять своё качество при кегле
10 пт или 1/7 дюйма в высоту и хорошо выглядеть при кегле 144 пт или 2
дюйма в высоту. На рисунке 3.2 это иллюстрируется показом разницы между
кеглями 10 и 36 пт.
10 Point Verdana
18 Point Verdana
36 Point Verdana
Рисунок 3.2 – Рендеринг шрифтов различных размеров
Вы можете отчётливо видеть, что качество типа 10 пт хорошее, невзирая
на то, что количество пикселей, используемых для отображения типа
небольшое. Когда имеется в наличии больше пикселей, визуализатор
использует набор построенных глифов, чтобы воспользоваться преимуществом
дополнительного разрешения, и таким образом качество шрифта остаётся
хорошим при всех размерах. Это происходит потому, что всякий раз, когда вы
создаёте объект Font, разрешение, размер и другие детали учитываются при
расчёте для того, чтобы получить наилучший результат.
3.2 Использование шрифтов
Первым шагом использования шрифта является создание объекта Font с
указанием нужного шрифта. Это можно осуществить несколькими способами,
но простейший конструктор шрифта не требует ничего, кроме имени семейства
шрифтов и размера.
Font fn = new Font("Times New Roman",10);